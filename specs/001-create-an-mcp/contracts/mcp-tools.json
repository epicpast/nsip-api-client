{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "NSIP MCP Server Tool Contracts",
  "description": "MCP tool definitions for NSIP Sheep Breeding Data API (FR-001, FR-010)",
  "version": "1.0.0",
  "tools": [
    {
      "name": "nsip_get_last_update",
      "description": "Get the date when NSIP database was last updated. Returns timestamp of most recent data refresh. Useful for checking data freshness before querying.",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of last database update"
          }
        },
        "required": ["lastUpdated"]
      },
      "nsipMethod": "get_date_last_updated",
      "requiresContextManagement": false
    },
    {
      "name": "nsip_list_breeds",
      "description": "List all available sheep breed groups in NSIP database. Returns breed identifiers and names. Use this to discover valid breed IDs for other queries.",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "breeds": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Breed group identifier"
                },
                "name": {
                  "type": "string",
                  "description": "Breed group display name"
                }
              },
              "required": ["id", "name"]
            }
          }
        },
        "required": ["breeds"]
      },
      "nsipMethod": "get_available_breed_groups",
      "requiresContextManagement": false
    },
    {
      "name": "nsip_get_statuses",
      "description": "Get status information for a specific breed group. Returns available statuses that can be used to filter animal searches.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "breed_group_id": {
            "type": "string",
            "description": "Breed group identifier (from nsip_list_breeds)",
            "minLength": 1
          }
        },
        "required": ["breed_group_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Status code"
                },
                "name": {
                  "type": "string",
                  "description": "Status display name"
                }
              }
            }
          }
        },
        "required": ["statuses"]
      },
      "nsipMethod": "get_statuses_by_breed_group",
      "requiresContextManagement": false
    },
    {
      "name": "nsip_get_trait_ranges",
      "description": "Get trait value ranges for a specific breed. Returns min/max values for each genetic trait used in searches. Helps construct valid search criteria.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "breed_id": {
            "type": "string",
            "description": "Breed identifier",
            "minLength": 1
          }
        },
        "required": ["breed_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "traits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Trait name"
                },
                "min": {
                  "type": "number",
                  "description": "Minimum value"
                },
                "max": {
                  "type": "number",
                  "description": "Maximum value"
                }
              }
            }
          }
        },
        "required": ["traits"]
      },
      "nsipMethod": "get_trait_ranges_by_breed",
      "requiresContextManagement": false
    },
    {
      "name": "nsip_search_animals",
      "description": "Search for sheep animals by breed and trait criteria. Returns paginated list of animals matching search filters. May return large responses that will be automatically summarized if >2000 tokens.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "breed_id": {
            "type": "string",
            "description": "Breed identifier to search within",
            "minLength": 1
          },
          "page": {
            "type": "integer",
            "description": "Page number (1-indexed)",
            "minimum": 1,
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "description": "Number of results per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          },
          "search_criteria": {
            "type": "object",
            "description": "Trait filters as key-value pairs (e.g., {\"PWWT\": \">150\"})",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": ["breed_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "animals": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Animal summary (full schema depends on NSIP API response)"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "pageSize": {
                "type": "integer"
              },
              "totalResults": {
                "type": "integer"
              }
            }
          },
          "_summarized": {
            "type": "boolean",
            "description": "True if response was summarized due to size"
          }
        },
        "required": ["animals"]
      },
      "nsipMethod": "search_animals",
      "requiresContextManagement": true
    },
    {
      "name": "nsip_get_animal",
      "description": "Get detailed information about a specific sheep animal by LPN ID or other identifier. Returns comprehensive genetic data, lineage, and trait evaluations. Large responses (>2000 tokens) will be summarized automatically.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "search_string": {
            "type": "string",
            "description": "Animal identifier (LPN ID, name, or other unique identifier)",
            "minLength": 1,
            "examples": ["6401492020FLE249", "AMWS12345"]
          }
        },
        "required": ["search_string"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "LpnId": {
            "type": "string",
            "description": "Livestock Production Number ID (unique identifier)"
          },
          "Sire": {
            "type": ["string", "null"],
            "description": "Sire LPN ID"
          },
          "Dam": {
            "type": ["string", "null"],
            "description": "Dam LPN ID"
          },
          "Breed": {
            "type": "string",
            "description": "Breed name"
          },
          "TotalProgeny": {
            "type": ["integer", "null"],
            "description": "Total number of progeny"
          },
          "Contact": {
            "type": ["object", "null"],
            "description": "Breeder contact information (phone, email, farm name)",
            "properties": {
              "phone": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "farmName": {
                "type": "string"
              }
            }
          },
          "Traits": {
            "type": "array",
            "description": "Genetic trait evaluations (may be summarized to top 3 if response >2000 tokens)",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                },
                "accuracy": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            }
          },
          "_summarized": {
            "type": "boolean",
            "description": "True if response was summarized (FR-005). Only top 3 traits with accuracy >=50 included when true."
          },
          "_original_token_count": {
            "type": "integer",
            "description": "Original response token count (present if summarized)"
          }
        },
        "required": ["LpnId", "Breed"]
      },
      "nsipMethod": "get_animal_details",
      "requiresContextManagement": true
    },
    {
      "name": "nsip_get_lineage",
      "description": "Get lineage information (pedigree) for a sheep animal. Returns sire and dam lineage up to configured depth. May be summarized if response >2000 tokens.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "lpn_id": {
            "type": "string",
            "description": "Animal LPN ID",
            "minLength": 5,
            "examples": ["6401492020FLE249"]
          }
        },
        "required": ["lpn_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "animal": {
            "type": "object",
            "description": "Subject animal"
          },
          "sire": {
            "type": ["object", "null"],
            "description": "Sire information"
          },
          "dam": {
            "type": ["object", "null"],
            "description": "Dam information"
          },
          "ancestors": {
            "type": "array",
            "description": "Additional ancestor information"
          },
          "_summarized": {
            "type": "boolean"
          }
        },
        "required": ["animal"]
      },
      "nsipMethod": "get_lineage",
      "requiresContextManagement": true
    },
    {
      "name": "nsip_get_progeny",
      "description": "Get progeny (offspring) list for a sheep animal. Returns paginated list of offspring with basic genetic information. May be summarized if response >2000 tokens.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "lpn_id": {
            "type": "string",
            "description": "Parent animal LPN ID",
            "minLength": 5
          },
          "page": {
            "type": "integer",
            "description": "Page number (1-indexed)",
            "minimum": 1,
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "description": "Number of results per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          }
        },
        "required": ["lpn_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "progeny": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Progeny animal summary"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "pageSize": {
                "type": "integer"
              },
              "totalProgeny": {
                "type": "integer"
              }
            }
          },
          "_summarized": {
            "type": "boolean"
          }
        },
        "required": ["progeny"]
      },
      "nsipMethod": "get_progeny",
      "requiresContextManagement": true
    },
    {
      "name": "nsip_search_by_lpn",
      "description": "Convenience method that combines animal details, lineage, and progeny into a single comprehensive report. Equivalent to calling nsip_get_animal + nsip_get_lineage + nsip_get_progeny. Always returns summarized response due to combined data size.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "lpn_id": {
            "type": "string",
            "description": "Animal LPN ID for comprehensive lookup",
            "minLength": 5,
            "examples": ["6401492020FLE249"]
          }
        },
        "required": ["lpn_id"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "details": {
            "type": "object",
            "description": "Animal details (from nsip_get_animal)"
          },
          "lineage": {
            "type": "object",
            "description": "Lineage information (from nsip_get_lineage)"
          },
          "progeny": {
            "type": "object",
            "description": "Progeny list (from nsip_get_progeny)"
          },
          "_summarized": {
            "type": "boolean",
            "const": true,
            "description": "Always true for this comprehensive query"
          },
          "_original_token_count": {
            "type": "integer"
          }
        },
        "required": ["details", "lineage", "progeny", "_summarized"]
      },
      "nsipMethod": "search_by_lpn",
      "requiresContextManagement": true
    }
  ],
  "errorCodes": [
    {
      "code": -32700,
      "name": "PARSE_ERROR",
      "description": "Invalid JSON was received by the server"
    },
    {
      "code": -32600,
      "name": "INVALID_REQUEST",
      "description": "The JSON sent is not a valid Request object"
    },
    {
      "code": -32601,
      "name": "METHOD_NOT_FOUND",
      "description": "The method does not exist / is not available"
    },
    {
      "code": -32602,
      "name": "INVALID_PARAMS",
      "description": "Invalid method parameter(s). Check error.data for details including expected format and correction suggestion."
    },
    {
      "code": -32603,
      "name": "INTERNAL_ERROR",
      "description": "Internal JSON-RPC error"
    },
    {
      "code": -32000,
      "name": "NSIP_API_ERROR",
      "description": "NSIP API call failed. Check error.data.suggestion for details."
    },
    {
      "code": -32001,
      "name": "CACHE_ERROR",
      "description": "Cache operation failed"
    },
    {
      "code": -32002,
      "name": "SUMMARIZATION_ERROR",
      "description": "Response summarization failed"
    },
    {
      "code": -32003,
      "name": "CONTEXT_ERROR",
      "description": "Context management error (token counting failed)"
    },
    {
      "code": -32004,
      "name": "TRANSPORT_ERROR",
      "description": "Transport-specific error"
    }
  ],
  "contextManagementRules": {
    "tokenThreshold": 2000,
    "tokenizer": "tiktoken cl100k_base (GPT-4)",
    "summarizationTarget": "70% token reduction",
    "passthroughCondition": "response <= 2000 tokens (FR-015)",
    "summarizationCondition": "response > 2000 tokens (FR-005)",
    "preserveFields": [
      "LpnId",
      "Sire",
      "Dam",
      "Breed",
      "TotalProgeny",
      "Contact (all fields)",
      "Top 3 traits by accuracy (accuracy >= 50)"
    ],
    "omitFields": [
      "Traits with accuracy < 50",
      "Redundant nested structures",
      "Detailed metadata (unless specifically requested)"
    ]
  },
  "transportConfig": {
    "supported": ["stdio", "http-sse", "websocket"],
    "default": "stdio",
    "configuration": {
      "environmentVariable": "MCP_TRANSPORT",
      "portVariable": "MCP_PORT (required for http-sse and websocket)"
    }
  },
  "caching": {
    "enabled": true,
    "ttl": 3600,
    "ttlUnit": "seconds",
    "keyFormat": "method_name:sorted_json_params",
    "maxSize": 1000,
    "evictionPolicy": "FIFO"
  }
}
